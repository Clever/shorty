version: 2
jobs:
  build:
    working_directory: /go/src/github.com/Clever/shorty
    docker:
    - image: circleci/golang:1.12-stretch
    - image: circleci/postgres:9.4-alpine-ram
    - image: redis@sha256:858b1677143e9f8455821881115e276f6177221de1c663d0abef9b2fda02d065
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    steps:
    - run:
        command: cd $HOME && git clone --depth 1 -v https://github.com/Clever/ci-scripts.git && cd ci-scripts && git show --oneline -s
        name: Clone ci-scripts
    - checkout
    - setup_remote_docker
    - run:
        command: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
        name: Set up CircleCI artifacts directories
    - run: sudo apt-get update
    - run:
        command: sudo apt-get install postgresql
        name: Install psql
    - run:
        command: |-
          echo Waiting for postgres
          for i in `seq 1 10`;
          do
            nc -z localhost 5432 && echo Success && exit 0
            echo -n .
            sleep 1
          done
          echo Failed waiting for postgres && exit 1
        name: Wait for postgres database to be ready
    - run: make install_deps
    - run: make build
    - run: sudo apt-get install -y postgresql-client
    - run: bash integration_tests.sh
    - run: $HOME/ci-scripts/circleci/docker-publish $DOCKER_USER $DOCKER_PASS "$DOCKER_EMAIL" $DOCKER_ORG
    - run: $HOME/ci-scripts/circleci/catapult-publish $CATAPULT_URL $CATAPULT_USER $CATAPULT_PASS shorty
    - run: if [ "${CIRCLE_BRANCH}" == "master" ]; then $HOME/ci-scripts/circleci/dapple-deploy $DAPPLE_URL $DAPPLE_USER $DAPPLE_PASS $APP_NAME clever-dev no-confirm-deploy; fi;
    - run: if [ "${CIRCLE_BRANCH}" == "master" ]; then $HOME/ci-scripts/circleci/dapple-deploy $DAPPLE_URL $DAPPLE_USER $DAPPLE_PASS $APP_NAME production confirm-then-deploy; fi;
